///
//  Generated code. Do not modify.
//  source: google/devtools/containeranalysis/v1beta1/vulnerability/vulnerability.proto
//
// @dart = 2.3
// ignore_for_file: camel_case_types,non_constant_identifier_names,library_prefixes,unused_import,unused_shown_name,return_of_invalid_type

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import '../package/package.pb.dart' as $0;
import '../common/common.pb.dart' as $1;

import 'vulnerability.pbenum.dart';

export 'vulnerability.pbenum.dart';

class Vulnerability_Detail extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('Vulnerability.Detail',
      package: const $pb.PackageName('grafeas.v1beta1.vulnerability'),
      createEmptyInstance: create)
    ..aOS(1, 'cpeUri')
    ..aOS(2, 'package')
    ..aOM<$0.Version>(3, 'minAffectedVersion', subBuilder: $0.Version.create)
    ..aOM<$0.Version>(4, 'maxAffectedVersion', subBuilder: $0.Version.create)
    ..aOS(5, 'severityName')
    ..aOS(6, 'description')
    ..aOM<VulnerabilityLocation>(7, 'fixedLocation',
        subBuilder: VulnerabilityLocation.create)
    ..aOS(8, 'packageType')
    ..aOB(9, 'isObsolete')
    ..hasRequiredFields = false;

  Vulnerability_Detail._() : super();
  factory Vulnerability_Detail() => create();
  factory Vulnerability_Detail.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory Vulnerability_Detail.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  Vulnerability_Detail clone() =>
      Vulnerability_Detail()..mergeFromMessage(this);
  Vulnerability_Detail copyWith(void Function(Vulnerability_Detail) updates) =>
      super.copyWith((message) => updates(message as Vulnerability_Detail));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static Vulnerability_Detail create() => Vulnerability_Detail._();
  Vulnerability_Detail createEmptyInstance() => create();
  static $pb.PbList<Vulnerability_Detail> createRepeated() =>
      $pb.PbList<Vulnerability_Detail>();
  @$core.pragma('dart2js:noInline')
  static Vulnerability_Detail getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<Vulnerability_Detail>(create);
  static Vulnerability_Detail _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set cpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearCpeUri() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get package => $_getSZ(1);
  @$pb.TagNumber(2)
  set package($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasPackage() => $_has(1);
  @$pb.TagNumber(2)
  void clearPackage() => clearField(2);

  @$pb.TagNumber(3)
  $0.Version get minAffectedVersion => $_getN(2);
  @$pb.TagNumber(3)
  set minAffectedVersion($0.Version v) {
    setField(3, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasMinAffectedVersion() => $_has(2);
  @$pb.TagNumber(3)
  void clearMinAffectedVersion() => clearField(3);
  @$pb.TagNumber(3)
  $0.Version ensureMinAffectedVersion() => $_ensure(2);

  @$pb.TagNumber(4)
  $0.Version get maxAffectedVersion => $_getN(3);
  @$pb.TagNumber(4)
  set maxAffectedVersion($0.Version v) {
    setField(4, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasMaxAffectedVersion() => $_has(3);
  @$pb.TagNumber(4)
  void clearMaxAffectedVersion() => clearField(4);
  @$pb.TagNumber(4)
  $0.Version ensureMaxAffectedVersion() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.String get severityName => $_getSZ(4);
  @$pb.TagNumber(5)
  set severityName($core.String v) {
    $_setString(4, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasSeverityName() => $_has(4);
  @$pb.TagNumber(5)
  void clearSeverityName() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get description => $_getSZ(5);
  @$pb.TagNumber(6)
  set description($core.String v) {
    $_setString(5, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasDescription() => $_has(5);
  @$pb.TagNumber(6)
  void clearDescription() => clearField(6);

  @$pb.TagNumber(7)
  VulnerabilityLocation get fixedLocation => $_getN(6);
  @$pb.TagNumber(7)
  set fixedLocation(VulnerabilityLocation v) {
    setField(7, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasFixedLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearFixedLocation() => clearField(7);
  @$pb.TagNumber(7)
  VulnerabilityLocation ensureFixedLocation() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.String get packageType => $_getSZ(7);
  @$pb.TagNumber(8)
  set packageType($core.String v) {
    $_setString(7, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasPackageType() => $_has(7);
  @$pb.TagNumber(8)
  void clearPackageType() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get isObsolete => $_getBF(8);
  @$pb.TagNumber(9)
  set isObsolete($core.bool v) {
    $_setBool(8, v);
  }

  @$pb.TagNumber(9)
  $core.bool hasIsObsolete() => $_has(8);
  @$pb.TagNumber(9)
  void clearIsObsolete() => clearField(9);
}

class Vulnerability extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('Vulnerability',
      package: const $pb.PackageName('grafeas.v1beta1.vulnerability'),
      createEmptyInstance: create)
    ..a<$core.double>(1, 'cvssScore', $pb.PbFieldType.OF)
    ..e<Severity>(2, 'severity', $pb.PbFieldType.OE,
        defaultOrMaker: Severity.SEVERITY_UNSPECIFIED,
        valueOf: Severity.valueOf,
        enumValues: Severity.values)
    ..pc<Vulnerability_Detail>(3, 'details', $pb.PbFieldType.PM,
        subBuilder: Vulnerability_Detail.create)
    ..hasRequiredFields = false;

  Vulnerability._() : super();
  factory Vulnerability() => create();
  factory Vulnerability.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory Vulnerability.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  Vulnerability clone() => Vulnerability()..mergeFromMessage(this);
  Vulnerability copyWith(void Function(Vulnerability) updates) =>
      super.copyWith((message) => updates(message as Vulnerability));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static Vulnerability create() => Vulnerability._();
  Vulnerability createEmptyInstance() => create();
  static $pb.PbList<Vulnerability> createRepeated() =>
      $pb.PbList<Vulnerability>();
  @$core.pragma('dart2js:noInline')
  static Vulnerability getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<Vulnerability>(create);
  static Vulnerability _defaultInstance;

  @$pb.TagNumber(1)
  $core.double get cvssScore => $_getN(0);
  @$pb.TagNumber(1)
  set cvssScore($core.double v) {
    $_setFloat(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCvssScore() => $_has(0);
  @$pb.TagNumber(1)
  void clearCvssScore() => clearField(1);

  @$pb.TagNumber(2)
  Severity get severity => $_getN(1);
  @$pb.TagNumber(2)
  set severity(Severity v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(2)
  void clearSeverity() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Vulnerability_Detail> get details => $_getList(2);
}

class Details extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('Details',
      package: const $pb.PackageName('grafeas.v1beta1.vulnerability'),
      createEmptyInstance: create)
    ..aOS(1, 'type')
    ..e<Severity>(2, 'severity', $pb.PbFieldType.OE,
        defaultOrMaker: Severity.SEVERITY_UNSPECIFIED,
        valueOf: Severity.valueOf,
        enumValues: Severity.values)
    ..a<$core.double>(3, 'cvssScore', $pb.PbFieldType.OF)
    ..pc<PackageIssue>(4, 'packageIssue', $pb.PbFieldType.PM,
        subBuilder: PackageIssue.create)
    ..aOS(5, 'shortDescription')
    ..aOS(6, 'longDescription')
    ..pc<$1.RelatedUrl>(7, 'relatedUrls', $pb.PbFieldType.PM,
        subBuilder: $1.RelatedUrl.create)
    ..hasRequiredFields = false;

  Details._() : super();
  factory Details() => create();
  factory Details.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory Details.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  Details clone() => Details()..mergeFromMessage(this);
  Details copyWith(void Function(Details) updates) =>
      super.copyWith((message) => updates(message as Details));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static Details create() => Details._();
  Details createEmptyInstance() => create();
  static $pb.PbList<Details> createRepeated() => $pb.PbList<Details>();
  @$core.pragma('dart2js:noInline')
  static Details getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Details>(create);
  static Details _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get type => $_getSZ(0);
  @$pb.TagNumber(1)
  set type($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasType() => $_has(0);
  @$pb.TagNumber(1)
  void clearType() => clearField(1);

  @$pb.TagNumber(2)
  Severity get severity => $_getN(1);
  @$pb.TagNumber(2)
  set severity(Severity v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(2)
  void clearSeverity() => clearField(2);

  @$pb.TagNumber(3)
  $core.double get cvssScore => $_getN(2);
  @$pb.TagNumber(3)
  set cvssScore($core.double v) {
    $_setFloat(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasCvssScore() => $_has(2);
  @$pb.TagNumber(3)
  void clearCvssScore() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<PackageIssue> get packageIssue => $_getList(3);

  @$pb.TagNumber(5)
  $core.String get shortDescription => $_getSZ(4);
  @$pb.TagNumber(5)
  set shortDescription($core.String v) {
    $_setString(4, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasShortDescription() => $_has(4);
  @$pb.TagNumber(5)
  void clearShortDescription() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get longDescription => $_getSZ(5);
  @$pb.TagNumber(6)
  set longDescription($core.String v) {
    $_setString(5, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasLongDescription() => $_has(5);
  @$pb.TagNumber(6)
  void clearLongDescription() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<$1.RelatedUrl> get relatedUrls => $_getList(6);
}

class PackageIssue extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('PackageIssue',
      package: const $pb.PackageName('grafeas.v1beta1.vulnerability'),
      createEmptyInstance: create)
    ..aOM<VulnerabilityLocation>(1, 'affectedLocation',
        subBuilder: VulnerabilityLocation.create)
    ..aOM<VulnerabilityLocation>(2, 'fixedLocation',
        subBuilder: VulnerabilityLocation.create)
    ..aOS(3, 'severityName')
    ..hasRequiredFields = false;

  PackageIssue._() : super();
  factory PackageIssue() => create();
  factory PackageIssue.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory PackageIssue.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  PackageIssue clone() => PackageIssue()..mergeFromMessage(this);
  PackageIssue copyWith(void Function(PackageIssue) updates) =>
      super.copyWith((message) => updates(message as PackageIssue));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static PackageIssue create() => PackageIssue._();
  PackageIssue createEmptyInstance() => create();
  static $pb.PbList<PackageIssue> createRepeated() =>
      $pb.PbList<PackageIssue>();
  @$core.pragma('dart2js:noInline')
  static PackageIssue getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<PackageIssue>(create);
  static PackageIssue _defaultInstance;

  @$pb.TagNumber(1)
  VulnerabilityLocation get affectedLocation => $_getN(0);
  @$pb.TagNumber(1)
  set affectedLocation(VulnerabilityLocation v) {
    setField(1, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasAffectedLocation() => $_has(0);
  @$pb.TagNumber(1)
  void clearAffectedLocation() => clearField(1);
  @$pb.TagNumber(1)
  VulnerabilityLocation ensureAffectedLocation() => $_ensure(0);

  @$pb.TagNumber(2)
  VulnerabilityLocation get fixedLocation => $_getN(1);
  @$pb.TagNumber(2)
  set fixedLocation(VulnerabilityLocation v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasFixedLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearFixedLocation() => clearField(2);
  @$pb.TagNumber(2)
  VulnerabilityLocation ensureFixedLocation() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get severityName => $_getSZ(2);
  @$pb.TagNumber(3)
  set severityName($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasSeverityName() => $_has(2);
  @$pb.TagNumber(3)
  void clearSeverityName() => clearField(3);
}

class VulnerabilityLocation extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('VulnerabilityLocation',
      package: const $pb.PackageName('grafeas.v1beta1.vulnerability'),
      createEmptyInstance: create)
    ..aOS(1, 'cpeUri')
    ..aOS(2, 'package')
    ..aOM<$0.Version>(3, 'version', subBuilder: $0.Version.create)
    ..hasRequiredFields = false;

  VulnerabilityLocation._() : super();
  factory VulnerabilityLocation() => create();
  factory VulnerabilityLocation.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityLocation.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityLocation clone() =>
      VulnerabilityLocation()..mergeFromMessage(this);
  VulnerabilityLocation copyWith(
          void Function(VulnerabilityLocation) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityLocation));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityLocation create() => VulnerabilityLocation._();
  VulnerabilityLocation createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityLocation> createRepeated() =>
      $pb.PbList<VulnerabilityLocation>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityLocation getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityLocation>(create);
  static VulnerabilityLocation _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set cpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearCpeUri() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get package => $_getSZ(1);
  @$pb.TagNumber(2)
  set package($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasPackage() => $_has(1);
  @$pb.TagNumber(2)
  void clearPackage() => clearField(2);

  @$pb.TagNumber(3)
  $0.Version get version => $_getN(2);
  @$pb.TagNumber(3)
  set version($0.Version v) {
    setField(3, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasVersion() => $_has(2);
  @$pb.TagNumber(3)
  void clearVersion() => clearField(3);
  @$pb.TagNumber(3)
  $0.Version ensureVersion() => $_ensure(2);
}
