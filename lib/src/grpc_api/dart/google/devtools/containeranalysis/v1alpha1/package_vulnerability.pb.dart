///
//  Generated code. Do not modify.
//  source: google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto
//
// @dart = 2.3
// ignore_for_file: camel_case_types,non_constant_identifier_names,library_prefixes,unused_import,unused_shown_name,return_of_invalid_type

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import 'package_vulnerability.pbenum.dart';

export 'package_vulnerability.pbenum.dart';

class VulnerabilityType_Version extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('VulnerabilityType.Version',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..a<$core.int>(1, 'epoch', $pb.PbFieldType.O3)
    ..aOS(2, 'name')
    ..aOS(3, 'revision')
    ..e<VulnerabilityType_Version_VersionKind>(5, 'kind', $pb.PbFieldType.OE,
        defaultOrMaker: VulnerabilityType_Version_VersionKind.NORMAL,
        valueOf: VulnerabilityType_Version_VersionKind.valueOf,
        enumValues: VulnerabilityType_Version_VersionKind.values)
    ..hasRequiredFields = false;

  VulnerabilityType_Version._() : super();
  factory VulnerabilityType_Version() => create();
  factory VulnerabilityType_Version.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType_Version.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType_Version clone() =>
      VulnerabilityType_Version()..mergeFromMessage(this);
  VulnerabilityType_Version copyWith(
          void Function(VulnerabilityType_Version) updates) =>
      super
          .copyWith((message) => updates(message as VulnerabilityType_Version));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_Version create() => VulnerabilityType_Version._();
  VulnerabilityType_Version createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType_Version> createRepeated() =>
      $pb.PbList<VulnerabilityType_Version>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_Version getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityType_Version>(create);
  static VulnerabilityType_Version _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get epoch => $_getIZ(0);
  @$pb.TagNumber(1)
  set epoch($core.int v) {
    $_setSignedInt32(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasEpoch() => $_has(0);
  @$pb.TagNumber(1)
  void clearEpoch() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get revision => $_getSZ(2);
  @$pb.TagNumber(3)
  set revision($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasRevision() => $_has(2);
  @$pb.TagNumber(3)
  void clearRevision() => clearField(3);

  @$pb.TagNumber(5)
  VulnerabilityType_Version_VersionKind get kind => $_getN(3);
  @$pb.TagNumber(5)
  set kind(VulnerabilityType_Version_VersionKind v) {
    setField(5, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasKind() => $_has(3);
  @$pb.TagNumber(5)
  void clearKind() => clearField(5);
}

class VulnerabilityType_Detail extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('VulnerabilityType.Detail',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..aOS(1, 'cpeUri')
    ..aOS(4, 'severityName')
    ..aOM<VulnerabilityType_VulnerabilityLocation>(5, 'fixedLocation',
        subBuilder: VulnerabilityType_VulnerabilityLocation.create)
    ..aOM<VulnerabilityType_Version>(6, 'minAffectedVersion',
        subBuilder: VulnerabilityType_Version.create)
    ..aOM<VulnerabilityType_Version>(7, 'maxAffectedVersion',
        subBuilder: VulnerabilityType_Version.create)
    ..aOS(8, 'package')
    ..aOS(9, 'description')
    ..aOS(10, 'packageType')
    ..aOB(11, 'isObsolete')
    ..hasRequiredFields = false;

  VulnerabilityType_Detail._() : super();
  factory VulnerabilityType_Detail() => create();
  factory VulnerabilityType_Detail.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType_Detail.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType_Detail clone() =>
      VulnerabilityType_Detail()..mergeFromMessage(this);
  VulnerabilityType_Detail copyWith(
          void Function(VulnerabilityType_Detail) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityType_Detail));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_Detail create() => VulnerabilityType_Detail._();
  VulnerabilityType_Detail createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType_Detail> createRepeated() =>
      $pb.PbList<VulnerabilityType_Detail>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_Detail getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityType_Detail>(create);
  static VulnerabilityType_Detail _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set cpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearCpeUri() => clearField(1);

  @$pb.TagNumber(4)
  $core.String get severityName => $_getSZ(1);
  @$pb.TagNumber(4)
  set severityName($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasSeverityName() => $_has(1);
  @$pb.TagNumber(4)
  void clearSeverityName() => clearField(4);

  @$pb.TagNumber(5)
  VulnerabilityType_VulnerabilityLocation get fixedLocation => $_getN(2);
  @$pb.TagNumber(5)
  set fixedLocation(VulnerabilityType_VulnerabilityLocation v) {
    setField(5, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasFixedLocation() => $_has(2);
  @$pb.TagNumber(5)
  void clearFixedLocation() => clearField(5);
  @$pb.TagNumber(5)
  VulnerabilityType_VulnerabilityLocation ensureFixedLocation() => $_ensure(2);

  @$pb.TagNumber(6)
  VulnerabilityType_Version get minAffectedVersion => $_getN(3);
  @$pb.TagNumber(6)
  set minAffectedVersion(VulnerabilityType_Version v) {
    setField(6, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasMinAffectedVersion() => $_has(3);
  @$pb.TagNumber(6)
  void clearMinAffectedVersion() => clearField(6);
  @$pb.TagNumber(6)
  VulnerabilityType_Version ensureMinAffectedVersion() => $_ensure(3);

  @$pb.TagNumber(7)
  VulnerabilityType_Version get maxAffectedVersion => $_getN(4);
  @$pb.TagNumber(7)
  set maxAffectedVersion(VulnerabilityType_Version v) {
    setField(7, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasMaxAffectedVersion() => $_has(4);
  @$pb.TagNumber(7)
  void clearMaxAffectedVersion() => clearField(7);
  @$pb.TagNumber(7)
  VulnerabilityType_Version ensureMaxAffectedVersion() => $_ensure(4);

  @$pb.TagNumber(8)
  $core.String get package => $_getSZ(5);
  @$pb.TagNumber(8)
  set package($core.String v) {
    $_setString(5, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasPackage() => $_has(5);
  @$pb.TagNumber(8)
  void clearPackage() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get description => $_getSZ(6);
  @$pb.TagNumber(9)
  set description($core.String v) {
    $_setString(6, v);
  }

  @$pb.TagNumber(9)
  $core.bool hasDescription() => $_has(6);
  @$pb.TagNumber(9)
  void clearDescription() => clearField(9);

  @$pb.TagNumber(10)
  $core.String get packageType => $_getSZ(7);
  @$pb.TagNumber(10)
  set packageType($core.String v) {
    $_setString(7, v);
  }

  @$pb.TagNumber(10)
  $core.bool hasPackageType() => $_has(7);
  @$pb.TagNumber(10)
  void clearPackageType() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get isObsolete => $_getBF(8);
  @$pb.TagNumber(11)
  set isObsolete($core.bool v) {
    $_setBool(8, v);
  }

  @$pb.TagNumber(11)
  $core.bool hasIsObsolete() => $_has(8);
  @$pb.TagNumber(11)
  void clearIsObsolete() => clearField(11);
}

class VulnerabilityType_VulnerabilityDetails extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      'VulnerabilityType.VulnerabilityDetails',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..aOS(3, 'type')
    ..e<VulnerabilityType_Severity>(4, 'severity', $pb.PbFieldType.OE,
        defaultOrMaker: VulnerabilityType_Severity.SEVERITY_UNSPECIFIED,
        valueOf: VulnerabilityType_Severity.valueOf,
        enumValues: VulnerabilityType_Severity.values)
    ..a<$core.double>(5, 'cvssScore', $pb.PbFieldType.OF)
    ..pc<VulnerabilityType_PackageIssue>(6, 'packageIssue', $pb.PbFieldType.PM,
        subBuilder: VulnerabilityType_PackageIssue.create)
    ..hasRequiredFields = false;

  VulnerabilityType_VulnerabilityDetails._() : super();
  factory VulnerabilityType_VulnerabilityDetails() => create();
  factory VulnerabilityType_VulnerabilityDetails.fromBuffer(
          $core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType_VulnerabilityDetails.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType_VulnerabilityDetails clone() =>
      VulnerabilityType_VulnerabilityDetails()..mergeFromMessage(this);
  VulnerabilityType_VulnerabilityDetails copyWith(
          void Function(VulnerabilityType_VulnerabilityDetails) updates) =>
      super.copyWith((message) =>
          updates(message as VulnerabilityType_VulnerabilityDetails));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_VulnerabilityDetails create() =>
      VulnerabilityType_VulnerabilityDetails._();
  VulnerabilityType_VulnerabilityDetails createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType_VulnerabilityDetails> createRepeated() =>
      $pb.PbList<VulnerabilityType_VulnerabilityDetails>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_VulnerabilityDetails getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<
          VulnerabilityType_VulnerabilityDetails>(create);
  static VulnerabilityType_VulnerabilityDetails _defaultInstance;

  @$pb.TagNumber(3)
  $core.String get type => $_getSZ(0);
  @$pb.TagNumber(3)
  set type($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasType() => $_has(0);
  @$pb.TagNumber(3)
  void clearType() => clearField(3);

  @$pb.TagNumber(4)
  VulnerabilityType_Severity get severity => $_getN(1);
  @$pb.TagNumber(4)
  set severity(VulnerabilityType_Severity v) {
    setField(4, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(4)
  void clearSeverity() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get cvssScore => $_getN(2);
  @$pb.TagNumber(5)
  set cvssScore($core.double v) {
    $_setFloat(2, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasCvssScore() => $_has(2);
  @$pb.TagNumber(5)
  void clearCvssScore() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<VulnerabilityType_PackageIssue> get packageIssue => $_getList(3);
}

class VulnerabilityType_PackageIssue extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      'VulnerabilityType.PackageIssue',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..aOM<VulnerabilityType_VulnerabilityLocation>(1, 'affectedLocation',
        subBuilder: VulnerabilityType_VulnerabilityLocation.create)
    ..aOM<VulnerabilityType_VulnerabilityLocation>(2, 'fixedLocation',
        subBuilder: VulnerabilityType_VulnerabilityLocation.create)
    ..aOS(3, 'severityName')
    ..hasRequiredFields = false;

  VulnerabilityType_PackageIssue._() : super();
  factory VulnerabilityType_PackageIssue() => create();
  factory VulnerabilityType_PackageIssue.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType_PackageIssue.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType_PackageIssue clone() =>
      VulnerabilityType_PackageIssue()..mergeFromMessage(this);
  VulnerabilityType_PackageIssue copyWith(
          void Function(VulnerabilityType_PackageIssue) updates) =>
      super.copyWith(
          (message) => updates(message as VulnerabilityType_PackageIssue));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_PackageIssue create() =>
      VulnerabilityType_PackageIssue._();
  VulnerabilityType_PackageIssue createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType_PackageIssue> createRepeated() =>
      $pb.PbList<VulnerabilityType_PackageIssue>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_PackageIssue getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityType_PackageIssue>(create);
  static VulnerabilityType_PackageIssue _defaultInstance;

  @$pb.TagNumber(1)
  VulnerabilityType_VulnerabilityLocation get affectedLocation => $_getN(0);
  @$pb.TagNumber(1)
  set affectedLocation(VulnerabilityType_VulnerabilityLocation v) {
    setField(1, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasAffectedLocation() => $_has(0);
  @$pb.TagNumber(1)
  void clearAffectedLocation() => clearField(1);
  @$pb.TagNumber(1)
  VulnerabilityType_VulnerabilityLocation ensureAffectedLocation() =>
      $_ensure(0);

  @$pb.TagNumber(2)
  VulnerabilityType_VulnerabilityLocation get fixedLocation => $_getN(1);
  @$pb.TagNumber(2)
  set fixedLocation(VulnerabilityType_VulnerabilityLocation v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasFixedLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearFixedLocation() => clearField(2);
  @$pb.TagNumber(2)
  VulnerabilityType_VulnerabilityLocation ensureFixedLocation() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get severityName => $_getSZ(2);
  @$pb.TagNumber(3)
  set severityName($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasSeverityName() => $_has(2);
  @$pb.TagNumber(3)
  void clearSeverityName() => clearField(3);
}

class VulnerabilityType_VulnerabilityLocation extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      'VulnerabilityType.VulnerabilityLocation',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..aOS(1, 'cpeUri')
    ..aOS(2, 'package')
    ..aOM<VulnerabilityType_Version>(4, 'version',
        subBuilder: VulnerabilityType_Version.create)
    ..hasRequiredFields = false;

  VulnerabilityType_VulnerabilityLocation._() : super();
  factory VulnerabilityType_VulnerabilityLocation() => create();
  factory VulnerabilityType_VulnerabilityLocation.fromBuffer(
          $core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType_VulnerabilityLocation.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType_VulnerabilityLocation clone() =>
      VulnerabilityType_VulnerabilityLocation()..mergeFromMessage(this);
  VulnerabilityType_VulnerabilityLocation copyWith(
          void Function(VulnerabilityType_VulnerabilityLocation) updates) =>
      super.copyWith((message) =>
          updates(message as VulnerabilityType_VulnerabilityLocation));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_VulnerabilityLocation create() =>
      VulnerabilityType_VulnerabilityLocation._();
  VulnerabilityType_VulnerabilityLocation createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType_VulnerabilityLocation> createRepeated() =>
      $pb.PbList<VulnerabilityType_VulnerabilityLocation>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType_VulnerabilityLocation getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<
          VulnerabilityType_VulnerabilityLocation>(create);
  static VulnerabilityType_VulnerabilityLocation _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set cpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearCpeUri() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get package => $_getSZ(1);
  @$pb.TagNumber(2)
  set package($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasPackage() => $_has(1);
  @$pb.TagNumber(2)
  void clearPackage() => clearField(2);

  @$pb.TagNumber(4)
  VulnerabilityType_Version get version => $_getN(2);
  @$pb.TagNumber(4)
  set version(VulnerabilityType_Version v) {
    setField(4, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasVersion() => $_has(2);
  @$pb.TagNumber(4)
  void clearVersion() => clearField(4);
  @$pb.TagNumber(4)
  VulnerabilityType_Version ensureVersion() => $_ensure(2);
}

class VulnerabilityType extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo('VulnerabilityType',
      package:
          const $pb.PackageName('google.devtools.containeranalysis.v1alpha1'),
      createEmptyInstance: create)
    ..a<$core.double>(2, 'cvssScore', $pb.PbFieldType.OF)
    ..e<VulnerabilityType_Severity>(3, 'severity', $pb.PbFieldType.OE,
        defaultOrMaker: VulnerabilityType_Severity.SEVERITY_UNSPECIFIED,
        valueOf: VulnerabilityType_Severity.valueOf,
        enumValues: VulnerabilityType_Severity.values)
    ..pc<VulnerabilityType_Detail>(4, 'details', $pb.PbFieldType.PM,
        subBuilder: VulnerabilityType_Detail.create)
    ..hasRequiredFields = false;

  VulnerabilityType._() : super();
  factory VulnerabilityType() => create();
  factory VulnerabilityType.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityType.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  VulnerabilityType clone() => VulnerabilityType()..mergeFromMessage(this);
  VulnerabilityType copyWith(void Function(VulnerabilityType) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityType));
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType create() => VulnerabilityType._();
  VulnerabilityType createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityType> createRepeated() =>
      $pb.PbList<VulnerabilityType>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityType getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityType>(create);
  static VulnerabilityType _defaultInstance;

  @$pb.TagNumber(2)
  $core.double get cvssScore => $_getN(0);
  @$pb.TagNumber(2)
  set cvssScore($core.double v) {
    $_setFloat(0, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasCvssScore() => $_has(0);
  @$pb.TagNumber(2)
  void clearCvssScore() => clearField(2);

  @$pb.TagNumber(3)
  VulnerabilityType_Severity get severity => $_getN(1);
  @$pb.TagNumber(3)
  set severity(VulnerabilityType_Severity v) {
    setField(3, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(3)
  void clearSeverity() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<VulnerabilityType_Detail> get details => $_getList(2);
}
